{"ast":null,"code":"var _jsxFileName = \"/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/signup_process.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport StepProgressBar from \"react-step-progress\";\nimport \"react-step-progress/dist/index.css\";\nimport \"../index.css\";\nimport \"../App.css\";\nimport Step1 from \"./step1\";\nimport Step2 from \"./step2\";\nimport Step3 from \"./step3\";\nimport Step4 from \"./step4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { formActions } from \"../store/form-data-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch(); //Using useRef because the progress bar inside the function couldn't understand the changes on the state and I wasn't able to make some validations\n\n  const formData = useSelector(state => state.formData.formData);\n  const curFormData = useRef(formData);\n  curFormData.current = formData;\n  const nextOperations = useSelector(state => state.formData.operations.update);\n  const curOperations = useRef(nextOperations);\n  curOperations.current = nextOperations;\n  const [nextStep, setNextStep] = useState(\"Failed\");\n  const curNextStep = useRef(nextStep);\n  curNextStep.current = nextStep;\n  useEffect(() => {\n    // Depends the status of the operations change the value of a variable.\n    if (nextOperations.status === \"Success\") {\n      setNextStep(\"Success\");\n    } else if (nextOperations.status === \"Pending\") {\n      setNextStep(\"Pending\");\n    } else if (nextOperations.status === \"Failed\") {\n      setNextStep(\"Failed\");\n    } // Whenever dispatch called, and variables nextStep and status of iperations has change the component re-render\n\n  }, [nextStep, nextOperations.status, dispatch]);\n\n  const validate1 = () => {\n    //Case 1\n    if (curNextStep.current === \"Failed\" && curOperations.current.error === \"\" || curNextStep.current === \"Success\" && curFormData.current.name === \"\") {\n      dispatch(formActions.setOperations({\n        function: \"update\",\n        status: \"Failed\",\n        error: \"Please fill in the fields\"\n      }));\n      return false;\n    } //Case 2\n\n\n    if (curNextStep.current === \"Failed\" && curOperations.current.error === \"\") {\n      return false;\n    } //Case 3\n\n\n    if (curNextStep.current === \"Pending\" && curOperations.current.error !== \"\") {\n      return false;\n    } //Case 4\n\n\n    if (curNextStep.current === \"Success\") {\n      // Accross all over the world,  the for a phone number length is min 4 and max 15 (without country code)\n      if (curFormData.current.phoneNumber.length < 7 || curFormData.current.phoneNumber.length > 15) {\n        console.log(\"Inside check number\");\n        dispatch(formActions.setOperations({\n          function: \"update\",\n          status: \"Failed\",\n          error: \"A phone number can not be less than 7 and more than 15 numbers\"\n        }));\n        return false;\n      }\n    } // Case win\n\n\n    return true;\n  };\n\n  const validate2 = () => {\n    //Case 1\n    if (curNextStep.current === \"Failed\" && curOperations.current.error === \"\") {\n      dispatch(formActions.setOperations({\n        function: \"update\",\n        status: \"Failed\",\n        error: \"Please fill in the fields\"\n      }));\n      return false;\n    } //Case 2\n\n\n    if (curNextStep.current === \"Failed\" && curOperations.current.error !== \"\") {\n      return false;\n    }\n\n    const today = new Date();\n    const years = today.getFullYear() - curFormData.current.dateBirth.substr(4);\n    console.log(curFormData.current.dateBirth);\n\n    if (curFormData.current.dateBirth === \"NaN NaN NaN\") {\n      dispatch(formActions.setOperations({\n        function: \"update\",\n        status: \"Failed\",\n        error: \"Number is NAN\"\n      }));\n      return false;\n    } //Case 3\n\n\n    if (curFormData.current.dateBirth.length < 8) {\n      dispatch(formActions.setOperations({\n        function: \"update\",\n        status: \"Failed\",\n        error: \"Please fill the birthday field correctly\"\n      }));\n      return false;\n    } //Case 4\n\n\n    if (years < 18) {\n      dispatch(formActions.setOperations({\n        function: \"update\",\n        status: \"Failed\",\n        error: \"You must be minimum 18 years old\"\n      }));\n      return false;\n    } //Case win\n\n\n    if (curOperations.current.status === \"Success\" && years >= 18) return true;\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(StepProgressBar, {\n      startingStep: 0,\n      wrapperClass: \"progress-wrapper-custom\" // onSubmit={}\n      // submitBtnName=\"Submit\"\n      ,\n      previousBtnName: \"Back\",\n      nextBtnName: \"Next\",\n      steps: [{\n        label: \"Step 1\",\n        name: \"step 1\",\n        content: /*#__PURE__*/_jsxDEV(Step1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 22\n        }, this),\n        validator: validate1\n      }, {\n        label: \"Step 2\",\n        name: \"step 2\",\n        content: /*#__PURE__*/_jsxDEV(Step2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 22\n        }, this),\n        validator: validate2\n      }, {\n        label: \"Step 3\",\n        name: \"step 3\",\n        content: /*#__PURE__*/_jsxDEV(Step3, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 22\n        }, this),\n        validator: () => true\n      }, {\n        label: \"Step 4\",\n        name: \"step 4\",\n        content: /*#__PURE__*/_jsxDEV(Step4, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 22\n        }, this)\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qegmjHChZgWDmMIx7W8OAu9YRJI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/signup_process.js"],"names":["React","useState","useEffect","useRef","StepProgressBar","Step1","Step2","Step3","Step4","useDispatch","useSelector","formActions","App","dispatch","formData","state","curFormData","current","nextOperations","operations","update","curOperations","nextStep","setNextStep","curNextStep","status","validate1","error","name","setOperations","function","phoneNumber","length","console","log","validate2","today","Date","years","getFullYear","dateBirth","substr","label","content","validator"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport StepProgressBar from \"react-step-progress\";\nimport \"react-step-progress/dist/index.css\";\nimport \"../index.css\";\nimport \"../App.css\";\nimport Step1 from \"./step1\";\nimport Step2 from \"./step2\";\nimport Step3 from \"./step3\";\nimport Step4 from \"./step4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { formActions } from \"../store/form-data-slice\";\n\nfunction App() {\n\n\n  const dispatch = useDispatch();\n\n  //Using useRef because the progress bar inside the function couldn't understand the changes on the state and I wasn't able to make some validations\n  const formData = useSelector((state) => state.formData.formData);\n  const curFormData = useRef(formData);\n  curFormData.current = formData;\n\n  const nextOperations = useSelector(\n    (state) => state.formData.operations.update\n  );\n  const curOperations = useRef(nextOperations);\n  curOperations.current = nextOperations;\n\n  const [nextStep, setNextStep] = useState(\"Failed\");\n  const curNextStep = useRef(nextStep);\n  curNextStep.current = nextStep;\n\n\n  useEffect(() => {\n    // Depends the status of the operations change the value of a variable.\n    if (nextOperations.status === \"Success\") {\n      setNextStep(\"Success\");\n    } else if (nextOperations.status === \"Pending\") {\n      setNextStep(\"Pending\");\n    } else if (nextOperations.status === \"Failed\") {\n      setNextStep(\"Failed\");\n    }\n\n    // Whenever dispatch called, and variables nextStep and status of iperations has change the component re-render\n  }, [nextStep, nextOperations.status, dispatch]);\n\n  const validate1 = () => {\n\n    //Case 1\n    if ( (curNextStep.current === \"Failed\" && curOperations.current.error === \"\") || (curNextStep.current === \"Success\" && curFormData.current.name === \"\")) {\n      dispatch(\n        formActions.setOperations({\n          function: \"update\",\n          status: \"Failed\",\n          error: \"Please fill in the fields\",\n        })\n      );\n      return false;\n    }\n    \n    //Case 2\n    if ( curNextStep.current === \"Failed\" && curOperations.current.error === \"\") {\n      return false;\n    }\n    \n    //Case 3\n    if (curNextStep.current === \"Pending\" && curOperations.current.error !== \"\"){\n\n      return false;\n    }\n\n    //Case 4\n    if(curNextStep.current === \"Success\"){\n    // Accross all over the world,  the for a phone number length is min 4 and max 15 (without country code)\n    if(curFormData.current.phoneNumber.length < 7 || curFormData.current.phoneNumber.length > 15) {\n      console.log(\"Inside check number\");\n      dispatch(\n        formActions.setOperations({\n          function: \"update\",\n          status: \"Failed\",\n          error:\n            \"A phone number can not be less than 7 and more than 15 numbers\",\n        })\n      );\n      return false;\n    }\n  }\n\n    // Case win\n    return true;\n  };\n\n\nconst validate2  = () => {\n\n\n  //Case 1\n  if ( (curNextStep.current === \"Failed\" && curOperations.current.error === \"\")) {\n    dispatch(\n      formActions.setOperations({\n        function: \"update\",\n        status: \"Failed\",\n        error: \"Please fill in the fields\",\n      })\n    );\n    return false;\n  }\n\n  //Case 2\n  if ( (curNextStep.current === \"Failed\" && curOperations.current.error !== \"\")) {\n    return false;\n  }\n\n\n\nconst today = new Date();\nconst years = today.getFullYear() - curFormData.current.dateBirth.substr(4);\nconsole.log(curFormData.current.dateBirth);\n\nif(curFormData.current.dateBirth === \"NaN NaN NaN\"){\n  dispatch(\n    formActions.setOperations({\n      function: \"update\",\n      status: \"Failed\",\n      error:\n        \"Number is NAN\",\n    }));\n    return false;\n}\n\n//Case 3\nif(curFormData.current.dateBirth.length < 8 ){\n  dispatch(\n    formActions.setOperations({\n      function: \"update\",\n      status: \"Failed\",\n      error:\n        \"Please fill the birthday field correctly\",\n    }));\n    return false;\n}\n\n//Case 4\nif(years < 18){\n  dispatch(\n    formActions.setOperations({\n      function: \"update\",\n      status: \"Failed\",\n      error:\n        \"You must be minimum 18 years old\",\n    }));\n    return false;\n}\n\n//Case win\nif(curOperations.current.status === \"Success\" && years >= 18)\nreturn true;\n  \n\n  return false;\n}\n\n\n  return (\n    <div className=\"app\">\n      <StepProgressBar\n        startingStep={0}\n        wrapperClass=\"progress-wrapper-custom\"\n        // onSubmit={}\n        // submitBtnName=\"Submit\"\n        previousBtnName=\"Back\"\n        nextBtnName=\"Next\"\n        steps={[\n          {\n            label: \"Step 1\",\n            name: \"step 1\",\n            content: <Step1 />,\n            validator: validate1,\n          },\n          {\n            label: \"Step 2\",\n            name: \"step 2\",\n            content: <Step2 />,\n            validator: validate2,\n          },\n          {\n            label: \"Step 3\",\n            name: \"step 3\",\n            content: <Step3 />,\n            validator: () => true,\n          },\n          {\n            label: \"Step 4\",\n            name: \"step 4\",\n            content: <Step4 />,\n          },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}