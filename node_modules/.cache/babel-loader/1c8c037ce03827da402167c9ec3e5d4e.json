{"ast":null,"code":"var _jsxFileName = \"/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/signup_process.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport StepProgressBar from \"react-step-progress\";\nimport \"react-step-progress/dist/index.css\";\nimport \"../index.css\";\nimport \"../App.css\";\nimport Step1 from \"./step1\";\nimport Step2 from \"./step2\";\nimport Step3 from \"./step3\";\nimport Step4 from \"./step4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { formActions } from \"../store/form-data-slice\";\nimport validator from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const onSubmit = () => {\n    alert(\"submit data\");\n  };\n\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.formData.formData);\n  const curFormData = useRef(formData);\n  curFormData.current = formData;\n  const nextOperations = useSelector(state => state.formData.operations.updateStep);\n  const curOperations = useRef(nextOperations);\n  curOperations.current = nextOperations;\n  const [nextStep, setNextStep] = useState(\"Failed\");\n  const curNextStep = useRef(nextStep);\n  curNextStep.current = nextStep;\n  useEffect(() => {\n    // If the operations has change that means the user passed the validator\n    if (nextOperations.status === \"Success\") {\n      console.log(\"Operations next change to Success\");\n      setNextStep(\"Success\");\n    } else if (nextOperations.status === \"Pending\") {\n      console.log(\"Operations next change to Pending\");\n      setNextStep(\"Pending\");\n    } else if (nextOperations.status === \"Failed\") {\n      console.log(\"Operations next change to Failed\");\n      setNextStep(\"Failed\");\n    } // Whenever dispatch called, and variables nextStep and status of iperations has change the component re-render\n\n  }, [nextStep, nextOperations, dispatch]);\n\n  const validate1 = () => {\n    console.log(curFormData.current.phoneNumber.length >= 7 && curFormData.current.phoneNumber.length <= 15); // Accross all over the world,  the for a phone number length is min 4 and max 15 (without country code)\n\n    if (!curFormData.current.phoneNumber.length >= 7 && curFormData.current.phoneNumber.length <= 15) {\n      dispatch(formActions.setOperations({\n        function: \"updateStep\",\n        status: \"Pending\",\n        error: \"A phone number can not be less than 7 and more than 15 numbers\"\n      }));\n      return false;\n    }\n\n    if (curNextStep.current === \"Failed\" && curOperations.current.error === \"\") {\n      dispatch(formActions.setOperations({\n        function: \"updateStep\",\n        status: \"Failed\",\n        error: \"Please fill in the fields\"\n      }));\n      return false;\n    }\n\n    if (curNextStep.current === \"Success\") return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(StepProgressBar, {\n      startingStep: 0,\n      wrapperClass: \"progress-wrapper-custom\",\n      onSubmit: onSubmit,\n      submitBtnName: \"Submit\",\n      previousBtnName: \"Back\",\n      nextBtnName: \"Next\",\n      steps: [{\n        label: \"Step 1\",\n        name: \"step 1\",\n        content: /*#__PURE__*/_jsxDEV(Step1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 22\n        }, this),\n        validator: validate1\n      }, {\n        label: \"Step 2\",\n        name: \"step 2\",\n        content: /*#__PURE__*/_jsxDEV(Step2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 22\n        }, this),\n        validator: () => curNextStep.current\n      }, {\n        label: \"Step 3\",\n        name: \"step 3\",\n        content: /*#__PURE__*/_jsxDEV(Step3, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 22\n        }, this),\n        validator: () => curNextStep.current\n      }, {\n        label: \"Step 4\",\n        name: \"step 4\",\n        content: /*#__PURE__*/_jsxDEV(Step4, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 22\n        }, this)\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qegmjHChZgWDmMIx7W8OAu9YRJI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/signup_process.js"],"names":["React","useState","useEffect","useRef","StepProgressBar","Step1","Step2","Step3","Step4","useDispatch","useSelector","formActions","validator","App","onSubmit","alert","dispatch","formData","state","curFormData","current","nextOperations","operations","updateStep","curOperations","nextStep","setNextStep","curNextStep","status","console","log","validate1","phoneNumber","length","setOperations","function","error","label","name","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport StepProgressBar from \"react-step-progress\";\nimport \"react-step-progress/dist/index.css\";\nimport \"../index.css\";\nimport \"../App.css\";\nimport Step1 from \"./step1\";\nimport Step2 from \"./step2\";\nimport Step3 from \"./step3\";\nimport Step4 from \"./step4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { formActions } from \"../store/form-data-slice\";\nimport validator from \"validator\";\n\nfunction App() {\n  const onSubmit = () => {\n    alert(\"submit data\");\n  };\n  const dispatch = useDispatch();\n  const formData = useSelector((state) => state.formData.formData);\n  const curFormData = useRef(formData);\n  curFormData.current = formData;\n\n  const nextOperations = useSelector(\n    (state) => state.formData.operations.updateStep\n  );\n  const curOperations = useRef(nextOperations);\n  curOperations.current = nextOperations;\n\n  const [nextStep, setNextStep] = useState(\"Failed\");\n  const curNextStep = useRef(nextStep);\n  curNextStep.current = nextStep;\n\n  useEffect(() => {\n    // If the operations has change that means the user passed the validator\n    if (nextOperations.status === \"Success\") {\n      console.log(\"Operations next change to Success\");\n      setNextStep(\"Success\");\n    } else if (nextOperations.status === \"Pending\") {\n      console.log(\"Operations next change to Pending\");\n      setNextStep(\"Pending\");\n    } else if (nextOperations.status === \"Failed\") {\n      console.log(\"Operations next change to Failed\");\n      setNextStep(\"Failed\");\n    }\n\n    // Whenever dispatch called, and variables nextStep and status of iperations has change the component re-render\n  }, [nextStep, nextOperations, dispatch]);\n\n  const validate1 = () => {\n\n    console.log(curFormData.current.phoneNumber.length >= 7 && curFormData.current.phoneNumber.length <= 15);\n    // Accross all over the world,  the for a phone number length is min 4 and max 15 (without country code)\n    if (!curFormData.current.phoneNumber.length >= 7 && curFormData.current.phoneNumber.length <= 15 ) {\n      dispatch(\n        formActions.setOperations({\n          function: \"updateStep\",\n          status: \"Pending\",\n          error:\n            \"A phone number can not be less than 7 and more than 15 numbers\",\n        })\n      );\n      return false;\n    }\n\n    if ( curNextStep.current === \"Failed\" && curOperations.current.error === \"\") {\n      dispatch(\n        formActions.setOperations({\n          function: \"updateStep\",\n          status: \"Failed\",\n          error: \"Please fill in the fields\",\n        })\n      );\n\n      return false;\n    }\n\n    if (curNextStep.current === \"Success\") return true;\n  };\n\n\n  return (\n    <div className=\"app\">\n      <StepProgressBar\n        startingStep={0}\n        wrapperClass=\"progress-wrapper-custom\"\n        onSubmit={onSubmit}\n        submitBtnName=\"Submit\"\n        previousBtnName=\"Back\"\n        nextBtnName=\"Next\"\n        steps={[\n          {\n            label: \"Step 1\",\n            name: \"step 1\",\n            content: <Step1 />,\n            validator: validate1,\n          },\n          {\n            label: \"Step 2\",\n            name: \"step 2\",\n            content: <Step2 />,\n            validator: () => curNextStep.current,\n          },\n          {\n            label: \"Step 3\",\n            name: \"step 3\",\n            content: <Step3 />,\n            validator: () => curNextStep.current,\n          },\n          {\n            label: \"Step 4\",\n            name: \"step 4\",\n            content: <Step4 />,\n          },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}