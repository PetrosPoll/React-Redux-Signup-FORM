{"ast":null,"code":"var _jsxFileName = \"/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/step1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport validator from 'validator';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateForm, formActions } from \"../store/form-data-slice\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    padding: 20,\n    marginTop: 30\n  },\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  error: {\n    maxWidth: 150,\n    color: \"red\"\n  },\n  errorCard: {\n    paddingTop: 15\n  }\n}));\n\nconst Step1 = () => {\n  _s();\n\n  const classes = useStyles(); // const [inputError, setInputError] = useState(false);\n\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const nextOperations = useSelector(state => state.formData.operations.updateStep); // useEffect(() => {\n  // // Whenever dispatch called, and variables nextStep and status of iperations has change the component re-render\n  // }, [ nextOperations, dispatch])\n\n  const nameChangeHandler = e => {\n    if (validator.isLength(e.target.value, {\n      min: 3,\n      max: 10\n    })) {\n      dispatch(formActions.setOperations({\n        function: 'updateStep',\n        status: \"Success\"\n      }));\n      dispatch(updateForm(e.target.value));\n    } else {\n      console.log(\"Name is less\");\n      dispatch(formActions.setOperations({\n        function: 'updateStep',\n        status: \"Pending\",\n        error: \"Name must be between 3 and 10 characters!\"\n      }));\n      dispatch(updateForm(e.target.value));\n    }\n  };\n\n  const phonenumberChangeHandler = e => {\n    if (validator.isMobilePhone(e.target.value, \"el-GR\")) {\n      dispatch(formActions.setOperations({\n        function: 'updateStep',\n        status: \"Success\"\n      }));\n      dispatch(updateForm(e.target.value));\n    } else {\n      console.log(\"Name is less\");\n      dispatch(formActions.setOperations({\n        function: 'updateStep',\n        status: \"Pending\",\n        error: \"You must write a phone number\"\n      }));\n      dispatch(updateForm(e.target.value));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 8,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"\\u0395\\u03AF\\u03C3\\u03BF\\u03B4\\u03BF\\u03C2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textField_padding\",\n          label: \"Name\",\n          type: \"text\",\n          name: \"Name\",\n          onChange: nameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 133\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textField_padding\",\n          label: \"Phone number\",\n          type: \"text\",\n          name: \"Phone number\",\n          onChange: phonenumberChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 156\n        }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n          placeholder: \"Enter phone number\",\n          value: phoneNumber,\n          onChange: setPhoneNumber,\n          country: 'gr'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), nextOperations.error && /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.errorCard,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              noWrap: false,\n              paragraph: true,\n              className: classes.error,\n              variant: \"body1\",\n              children: /*#__PURE__*/_jsxDEV(ErrorOutlineOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              noWrap: false,\n              paragraph: true,\n              className: classes.error,\n              variant: \"body1\",\n              children: nextOperations.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step1, \"WJIT8OqOOvPZY+HF2XFMXuuT324=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Step1;\nexport default Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/step1.js"],"names":["React","useState","useEffect","Typography","Grid","Paper","LockOutlinedIcon","TextField","makeStyles","validator","ErrorOutlineOutlinedIcon","useDispatch","useSelector","updateForm","formActions","PhoneInput","useStyles","theme","root","paddingLeft","paddingRight","padding","marginTop","form","margin","spacing","width","error","maxWidth","color","errorCard","paddingTop","Step1","classes","phoneNumber","setPhoneNumber","dispatch","nextOperations","state","formData","operations","updateStep","nameChangeHandler","e","isLength","target","value","min","max","setOperations","function","status","console","log","phonenumberChangeHandler","isMobilePhone"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport validator from 'validator';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateForm, formActions} from \"../store/form-data-slice\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/bootstrap.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: 50,\n        paddingRight: 50,\n        padding: 20,\n        marginTop: 30\n\n    },\n    form: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    error: {\n        maxWidth: 150,\n        color: \"red\"\n    },\n    errorCard: {\n        paddingTop: 15,\n    },\n}));\n\n\nconst Step1 = () => {\n    const classes = useStyles();\n    // const [inputError, setInputError] = useState(false);\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const dispatch = useDispatch();\n    const nextOperations = useSelector((state) =>state.formData.operations.updateStep);\n\n\n    // useEffect(() => {\n       \n    // // Whenever dispatch called, and variables nextStep and status of iperations has change the component re-render\n    // }, [ nextOperations, dispatch])\n\n\n    const nameChangeHandler = (e) => {\n        if(validator.isLength(e.target.value, {min: 3, max: 10}) ){\n            dispatch(formActions.setOperations({\n                function: 'updateStep',\n                status: \"Success\",\n            }))\n            dispatch(updateForm(e.target.value));\n        }else{\n            console.log(\"Name is less\");\n            dispatch(formActions.setOperations({\n                function: 'updateStep',\n                status: \"Pending\",\n                error: \"Name must be between 3 and 10 characters!\"\n            }));\n            dispatch(updateForm(e.target.value));\n        }\n    }\n\n    const phonenumberChangeHandler = (e) => {\n        if(validator.isMobilePhone(e.target.value, \"el-GR\")){\n            dispatch(formActions.setOperations({\n                function: 'updateStep',\n                status: \"Success\",\n            }))\n            dispatch(updateForm(e.target.value));\n        }else{\n            console.log(\"Name is less\");\n            dispatch(formActions.setOperations({\n                function: 'updateStep',\n                status: \"Pending\",\n                error: \"You must write a phone number\"\n            }));\n            dispatch(updateForm(e.target.value));\n        }\n    }\n\n    return(\n        <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n        <Paper className={classes.root}  elevation={8} >\n        <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n                <LockOutlinedIcon />\n            \n            <Typography component=\"h1\" variant=\"h5\">\n             Είσοδος\n            </Typography>\n      \n            <TextField className=\"textField_padding\" label=\"Name\" type=\"text\" name=\"Name\" onChange={nameChangeHandler} ></TextField><br />\n            <TextField className=\"textField_padding\" label=\"Phone number\" type=\"text\" name=\"Phone number\" onChange={phonenumberChangeHandler} ></TextField><br />\n            <PhoneInput placeholder=\"Enter phone number\" value={phoneNumber} onChange={setPhoneNumber} country={'gr'}/>\n        </Grid>\n\n        {nextOperations.error &&\n            <Paper elevation={3} className={classes.errorCard}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n\n                    <Grid item>\n                        <Typography component=\"div\" noWrap={false} paragraph={true} className={classes.error} variant=\"body1\">\n                            <ErrorOutlineOutlinedIcon />\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography component=\"div\" noWrap={false} paragraph={true} className={classes.error} variant=\"body1\">\n                            {nextOperations.error}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n            </Paper>\n        }\n    </Paper>\n    </Grid>\n    );\n}\n\nexport default Step1;"]},"metadata":{},"sourceType":"module"}