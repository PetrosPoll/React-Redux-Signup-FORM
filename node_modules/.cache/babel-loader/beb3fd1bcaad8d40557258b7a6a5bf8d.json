{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; //Form initial State \n\nconst initialFormState = {\n  formData: {\n    name: '',\n    phoneNumber: '',\n    email: '',\n    dateBirth: ''\n  },\n  operations: {\n    update: {\n      status: '',\n      error: ''\n    },\n    updateStep: {\n      status: \"Failed\",\n      error: \"\"\n    }\n  }\n}; //Form slice initialization \n\nconst formSlice = createSlice({\n  name: 'signupForm',\n  initialState: initialFormState,\n  reducers: {\n    setFormData(state, action) {\n      var _action$payload, _action$payload2, _action$payload3, _action$payload4;\n\n      if ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.name) state.formData.name = action.payload.name;\n      if ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.phoneNumber) state.formData.phoneNumber = action.payload.phoneNumber;\n      if ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.email) state.formData.email = action.payload.email;\n      if ((_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.dateBirth) state.formData.dateBirth = action.payload.dateBirth;\n    },\n\n    setOperations(state, action) {\n      state.operations[action.payload.function] = {\n        status: action.payload.status || '',\n        error: action.payload.error || undefined\n      };\n    }\n\n  }\n});\nexport const formActions = formSlice.actions;\nexport const updateForm = updateFormData => {\n  return dispatch => {\n    // // Setting the operations as pending\n    // dispatch(formActions.setOperations({status:'Pending',function:'update'}))\n    // If you don't find any error above you can set operations as Success and set the data.\n    dispatch(formActions.setOperations({\n      function: 'update',\n      status: 'Success'\n    }));\n    dispatch(formActions.setFormData(updateFormData));\n  };\n};\nexport default formSlice.reducer;","map":{"version":3,"sources":["/Users/petros6000/Desktop/Intouch Games/signup-form/src/store/form-data-slice.js"],"names":["createSlice","initialFormState","formData","name","phoneNumber","email","dateBirth","operations","update","status","error","updateStep","formSlice","initialState","reducers","setFormData","state","action","payload","setOperations","function","undefined","formActions","actions","updateForm","updateFormData","dispatch","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,WAAW,EAAE,EAFR;AAGLC,IAAAA,KAAK,EAAE,EAHF;AAILC,IAAAA,SAAS,EAAE;AAJN,GADY;AAQrBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAC;AAFF,KADA;AAKRC,IAAAA,UAAU,EAAC;AACPF,MAAAA,MAAM,EAAE,QADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AALH;AARS,CAAzB,C,CAqBA;;AACA,MAAME,SAAS,GAAGZ,WAAW,CAAC;AAC1BG,EAAAA,IAAI,EAAE,YADoB;AAE1BU,EAAAA,YAAY,EAAEZ,gBAFY;AAG1Ba,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAOC,MAAP,EAAc;AAAA;;AACrB,6BAAGA,MAAM,CAACC,OAAV,oDAAG,gBAAgBf,IAAnB,EACAa,KAAK,CAACd,QAAN,CAAeC,IAAf,GAAsBc,MAAM,CAACC,OAAP,CAAef,IAArC;AACA,8BAAGc,MAAM,CAACC,OAAV,qDAAG,iBAAgBd,WAAnB,EACAY,KAAK,CAACd,QAAN,CAAeE,WAAf,GAA6Ba,MAAM,CAACC,OAAP,CAAed,WAA5C;AACA,8BAAGa,MAAM,CAACC,OAAV,qDAAG,iBAAgBb,KAAnB,EACAW,KAAK,CAACd,QAAN,CAAeG,KAAf,GAAuBY,MAAM,CAACC,OAAP,CAAeb,KAAtC;AACA,8BAAGY,MAAM,CAACC,OAAV,qDAAG,iBAAgBZ,SAAnB,EACAU,KAAK,CAACd,QAAN,CAAeI,SAAf,GAA2BW,MAAM,CAACC,OAAP,CAAeZ,SAA1C;AAEH,KAXK;;AAYNa,IAAAA,aAAa,CAACH,KAAD,EAAOC,MAAP,EAAc;AACvBD,MAAAA,KAAK,CAACT,UAAN,CAAiBU,MAAM,CAACC,OAAP,CAAeE,QAAhC,IAA4C;AACxCX,QAAAA,MAAM,EAAGQ,MAAM,CAACC,OAAP,CAAeT,MAAf,IAAyB,EADM;AAExCC,QAAAA,KAAK,EAAGO,MAAM,CAACC,OAAP,CAAeR,KAAf,IAAwBW;AAFQ,OAA5C;AAIH;;AAjBK;AAHgB,CAAD,CAA7B;AAuBA,OAAO,MAAMC,WAAW,GAAGV,SAAS,CAACW,OAA9B;AAIP,OAAO,MAAMC,UAAU,GAAIC,cAAD,IAAmB;AACzC,SAAQC,QAAD,IAAc;AACjB;AACA;AAEF;AACAA,IAAAA,QAAQ,CAACJ,WAAW,CAACH,aAAZ,CAA0B;AACjCC,MAAAA,QAAQ,EAAE,QADuB;AAEjCX,MAAAA,MAAM,EAAE;AAFyB,KAA1B,CAAD,CAAR;AAIFiB,IAAAA,QAAQ,CAACJ,WAAW,CAACP,WAAZ,CAAwBU,cAAxB,CAAD,CAAR;AACC,GAVD;AAWH,CAZM;AAeP,eAAeb,SAAS,CAACe,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n//Form initial State \nconst initialFormState = { \n    formData:{\n        name: '',\n        phoneNumber: '',\n        email: '',\n        dateBirth: '',\n\n    },\n    operations: {\n        update: {\n            status: '',\n            error:''\n        },\n        updateStep:{\n            status: \"Failed\",\n            error: \"\"\n        }\n        \n    }\n}\n\n//Form slice initialization \nconst formSlice = createSlice({\n    name: 'signupForm',\n    initialState: initialFormState,\n    reducers: {\n        setFormData(state,action){\n            if(action.payload?.name)\n            state.formData.name = action.payload.name;\n            if(action.payload?.phoneNumber)\n            state.formData.phoneNumber = action.payload.phoneNumber;\n            if(action.payload?.email)\n            state.formData.email = action.payload.email;\n            if(action.payload?.dateBirth)\n            state.formData.dateBirth = action.payload.dateBirth;\n            \n        },\n        setOperations(state,action){\n            state.operations[action.payload.function] = {\n                status : action.payload.status || '',\n                error : action.payload.error || undefined\n            };\n        },\n    }\n});\nexport const formActions = formSlice.actions;\n\n\n\nexport const updateForm = (updateFormData) =>{\n    return (dispatch) => {\n        // // Setting the operations as pending\n        // dispatch(formActions.setOperations({status:'Pending',function:'update'}))\n    \n      // If you don't find any error above you can set operations as Success and set the data.\n      dispatch(formActions.setOperations({\n        function: 'update',\n        status: 'Success'\n    }));\n    dispatch(formActions.setFormData(updateFormData));\n    }\n}\n\n\nexport default formSlice.reducer;"]},"metadata":{},"sourceType":"module"}