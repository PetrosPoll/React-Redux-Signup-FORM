{"ast":null,"code":"var _jsxFileName = \"/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/step2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport validator from 'validator';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateForm, formActions } from \"../store/form-data-slice\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    padding: 20,\n    marginTop: 30\n  },\n  error: {\n    maxWidth: 150,\n    color: \"red\"\n  },\n  errorCard: {\n    paddingTop: 15,\n    marginTop: 20\n  },\n  textField: {\n    width: 300,\n    marginTop: 20\n  }\n}));\n\nconst Step2 = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const nextOperations = useSelector(state => state.formData.operations.update);\n  const formData = useSelector(state => state.formData.formData);\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    setEmail(formData.email);\n  }, [email]);\n\n  const emailChangeHandler = e => {\n    setEmail(e.target.value);\n    console.log(\"Email check validator\");\n\n    if (validator.isEmail('fooo')) {\n      console.log(\"Inside foo@bar.com\");\n      dispatch(formActions.setOperations({\n        function: 'update',\n        status: \"Failed\",\n        error: \"Invalid email\"\n      }));\n    }\n  };\n\n  const dobChangeHandler = e => {};\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 8,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"\\u0395\\u03AF\\u03C3\\u03BF\\u03B4\\u03BF\\u03C2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          label: \"email\",\n          variant: \"outlined\",\n          type: \"text\",\n          name: \"Email\",\n          onChange: emailChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 156\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          label: \"date of birth\",\n          variant: \"outlined\",\n          type: \"text\",\n          name: \"date of birth\",\n          onChange: dobChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 170\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), nextOperations.error && /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.errorCard,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              noWrap: false,\n              paragraph: true,\n              className: classes.error,\n              variant: \"body1\",\n              children: /*#__PURE__*/_jsxDEV(ErrorOutlineOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              noWrap: false,\n              paragraph: true,\n              className: classes.error,\n              variant: \"body1\",\n              children: nextOperations.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step2, \"bXNeSDUJXSiB8EFYCXlqLxV+hZw=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = Step2;\nexport default Step2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"sources":["/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/step2.js"],"names":["React","useState","useEffect","Typography","Grid","Paper","LockOutlinedIcon","TextField","makeStyles","validator","ErrorOutlineOutlinedIcon","useDispatch","useSelector","updateForm","formActions","PhoneInput","useStyles","theme","root","paddingLeft","paddingRight","padding","marginTop","error","maxWidth","color","errorCard","paddingTop","textField","width","Step2","classes","dispatch","nextOperations","state","formData","operations","update","email","setEmail","emailChangeHandler","e","target","value","console","log","isEmail","setOperations","function","status","dobChangeHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport validator from 'validator';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateForm, formActions} from \"../store/form-data-slice\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: 50,\n        paddingRight: 50,\n        padding: 20,\n        marginTop: 30\n\n    },\n    error: {\n        maxWidth: 150,\n        color: \"red\"\n    },\n    errorCard: {\n        paddingTop: 15,\n        marginTop: 20\n    },\n    textField: {\n        width: 300,\n        marginTop: 20\n    },\n}));\n\n\nconst Step2 = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const nextOperations = useSelector((state) =>state.formData.operations.update);\n    const formData = useSelector((state) => state.formData.formData);\n    const [email, setEmail] = useState(\"\");\n\n    useEffect(() => {\n        \n        setEmail(formData.email);\n    }, [email])\n\n\n\n    const emailChangeHandler = (e) => {\n        setEmail(e.target.value);\n        console.log(\"Email check validator\");\n        if(validator.isEmail('fooo')){\n            console.log(\"Inside foo@bar.com\");\n            dispatch(formActions.setOperations({\n                function: 'update',\n                status: \"Failed\",\n                error: \"Invalid email\"\n            }))\n        }\n    }\n\n    const dobChangeHandler = (e) => {\n\n    }\n\n    return(\n        <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n        <Paper className={classes.root}  elevation={8} >\n        <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n                <LockOutlinedIcon />\n            \n            <Typography component=\"h1\" variant=\"h5\">\n             Είσοδος\n            </Typography>\n      \n            <TextField className={classes.textField} label=\"email\" variant=\"outlined\"  type=\"text\" name=\"Email\" onChange={emailChangeHandler} ></TextField><br />\n            <TextField className={classes.textField} label=\"date of birth\" variant=\"outlined\"  type=\"text\" name=\"date of birth\" onChange={dobChangeHandler} ></TextField><br />\n        </Grid>\n\n        {nextOperations.error &&\n            <Paper elevation={3} className={classes.errorCard}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n\n                    <Grid item>\n                        <Typography component=\"div\" noWrap={false} paragraph={true} className={classes.error} variant=\"body1\">\n                            <ErrorOutlineOutlinedIcon />\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography component=\"div\" noWrap={false} paragraph={true} className={classes.error} variant=\"body1\">\n                            {nextOperations.error}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n            </Paper>\n        }\n    </Paper>\n    </Grid>\n    );\n}\n\nexport default Step2;"]},"metadata":{},"sourceType":"module"}