{"ast":null,"code":"var _jsxFileName = \"/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/signup_process.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport '../index.css';\nimport '../App.css';\nimport Step1 from './step1';\nimport Step2 from './step2';\nimport Step3 from './step3';\nimport Step4 from './step4';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateForm, formActions } from \"../store/form-data-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction step2Validator() {\n  return true;\n}\n\nfunction step3Validator() {\n  return true;\n}\n\nfunction App() {\n  _s();\n\n  const onSubmit = () => {\n    alert('submit data');\n  };\n\n  const dispatch = useDispatch();\n  const nextOperations = useSelector(state => state.formData.operations.updateStep);\n  const [nextStep, setNextStep] = useState(false);\n  const curNextStep = useRef(nextStep);\n  curNextStep.current = nextStep;\n  useEffect(() => {\n    // If the operations has change that means the user passed the validator\n    if (nextOperations.status === \"true\") {\n      console.log(\"Operations next change to true\");\n      setNextStep(true);\n    }\n\n    dispatch(formActions.setOperations({\n      function: 'updateStep',\n      status: \"false\"\n    })); // Whenever dispatch called, and variables nextStep and status of iperations has change the component re-render\n  }, [nextStep, nextOperations.status, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"app\",\n    children: /*#__PURE__*/_jsxDEV(StepProgressBar, {\n      startingStep: 0,\n      wrapperClass: \"progress-wrapper-custom\",\n      onSubmit: onSubmit,\n      submitBtnName: \"Submit\",\n      previousBtnName: \"Back\",\n      nextBtnName: \"Next\",\n      steps: [{\n        label: 'Step 1',\n        name: 'step 1',\n        content: /*#__PURE__*/_jsxDEV(Step1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this),\n        validator: () => curNextStep.current\n      }, {\n        label: 'Step 2',\n        name: 'step 2',\n        content: /*#__PURE__*/_jsxDEV(Step2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this),\n        validator: step2Validator\n      }, {\n        label: 'Step 3',\n        name: 'step 3',\n        content: /*#__PURE__*/_jsxDEV(Step3, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 22\n        }, this),\n        validator: step3Validator\n      }, {\n        label: 'Step 4',\n        name: 'step 4',\n        content: /*#__PURE__*/_jsxDEV(Step4, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 22\n        }, this)\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iMoKfRUH+EZAs3MKb+B68/ojKVo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/signup_process.js"],"names":["React","useState","useEffect","useRef","StepProgressBar","Step1","Step2","Step3","Step4","useDispatch","useSelector","updateForm","formActions","step2Validator","step3Validator","App","onSubmit","alert","dispatch","nextOperations","state","formData","operations","updateStep","nextStep","setNextStep","curNextStep","current","status","console","log","setOperations","function","label","name","content","validator"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport '../index.css';\nimport '../App.css';\nimport Step1 from './step1';\nimport Step2 from './step2';\nimport Step3 from './step3';\nimport Step4 from './step4';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateForm, formActions} from \"../store/form-data-slice\";\n\n\nfunction step2Validator() {\n  return true;\n}\n\nfunction step3Validator() {\n  return true;\n}\n\nfunction App() {\n  const onSubmit = () => {\n    alert('submit data');\n  };\n  const dispatch = useDispatch();\n  const nextOperations = useSelector((state) =>state.formData.operations.updateStep);\n  const [nextStep, setNextStep] = useState(false);\n  const curNextStep = useRef(nextStep);\n  curNextStep.current = nextStep;\n\n \n\n  useEffect(() => {\n    // If the operations has change that means the user passed the validator\n    if(nextOperations.status === \"true\"){\n      console.log(\"Operations next change to true\")\n      setNextStep(true);\n    }\n    dispatch(formActions.setOperations({\n      function: 'updateStep',\n      status: \"false\",\n  }))\n// Whenever dispatch called, and variables nextStep and status of iperations has change the component re-render\n}, [ nextStep,nextOperations.status, dispatch])\n\n\n\n  \n\n  return (\n    <div class=\"app\">\n      <StepProgressBar\n        startingStep={0}\n        wrapperClass=\"progress-wrapper-custom\"\n        onSubmit={onSubmit}\n        submitBtnName=\"Submit\"\n        previousBtnName=\"Back\"\n        nextBtnName=\"Next\"\n        steps={[\n          {\n            label: 'Step 1',\n            name: 'step 1',\n            content: <Step1/>,\n            validator: () => curNextStep.current,\n          },\n          {\n            label: 'Step 2',\n            name: 'step 2',\n            content: <Step2/>,\n            validator: step2Validator\n          },\n          {\n            label: 'Step 3',\n            name: 'step 3',\n            content: <Step3/>,\n            validator: step3Validator\n          },\n          {\n            label: 'Step 4',\n            name: 'step 4',\n            content: <Step4/>\n          }\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}