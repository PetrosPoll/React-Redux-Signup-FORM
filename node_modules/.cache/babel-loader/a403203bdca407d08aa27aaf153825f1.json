{"ast":null,"code":"var _jsxFileName = \"/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/step1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport validator from 'validator';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateForm, formActions } from \"../store/form-data-slice\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Box from '@mui/material/Box'; // Styles for the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  // root: {\n  //     padding: 20,\n  //     marginTop: 30,\n  // },\n  error: {\n    maxWidth: 150,\n    color: \"red\"\n  },\n  errorCard: {\n    padding: 15,\n    marginTop: 20\n  },\n  textField: {\n    marginTop: 20,\n    marginBottom: 20\n  },\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Step1 = () => {\n  _s();\n\n  const classes = useStyles();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const nextOperations = useSelector(state => state.formData.operations.update);\n  const formData = useSelector(state => state.formData.formData);\n  const matches321 = useMediaQuery('(max-width:321px)');\n  useEffect(() => {\n    // Set phone number to input when you come back from another step\n    setPhoneNumber(formData.phoneNumber);\n  }, [formData.phoneNumber]); // Handler function for name input\n\n  const nameChangeHandler = e => {\n    if (validator.isLength(e.target.value.trim(), {\n      min: 3,\n      max: 10\n    })) {\n      dispatch(formActions.setOperations({\n        function: 'update',\n        status: \"Success\"\n      })); // Pass the data to the store\n\n      dispatch(updateForm({\n        name: e.target.value.trim()\n      }));\n    } else {\n      // Set a new error \n      dispatch(formActions.setOperations({\n        function: 'update',\n        status: \"Pending\",\n        error: \"Name must be between 3 and 10 characters!\"\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: \"xs=12 sm=6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: \"xs=12 sm=6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Step1, \"V3wUL8rJ9PsL0GwPLV1FwRYh5bI=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useMediaQuery];\n});\n\n_c = Step1;\nexport default Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["/Users/petros6000/Desktop/Intouch Games/signup-form/src/components/step1.js"],"names":["React","useState","useEffect","Typography","Grid","Container","Paper","LockOutlinedIcon","TextField","makeStyles","validator","ErrorOutlineOutlinedIcon","useDispatch","useSelector","updateForm","formActions","PhoneInput","useMediaQuery","Box","useStyles","theme","error","maxWidth","color","errorCard","padding","marginTop","textField","marginBottom","root","flexGrow","paper","spacing","unit","textAlign","palette","text","secondary","Step1","classes","phoneNumber","setPhoneNumber","dispatch","nextOperations","state","formData","operations","update","matches321","nameChangeHandler","e","isLength","target","value","trim","min","max","setOperations","function","status","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport validator from 'validator';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateForm, formActions} from \"../store/form-data-slice\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Box from '@mui/material/Box';\n\n\n\n\n// Styles for the component\nconst useStyles = makeStyles((theme) => ({\n    // root: {\n    //     padding: 20,\n    //     marginTop: 30,\n    // },\n    error: {\n        maxWidth: 150,\n        color: \"red\"\n    },\n    errorCard: {\n        padding: 15,\n        marginTop: 20\n    },\n    textField: {\n        marginTop: 20,\n        marginBottom: 20\n    },\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n}));\n\n\nconst Step1 = () => {\n    const classes = useStyles();\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const dispatch = useDispatch();\n    const nextOperations = useSelector((state) =>state.formData.operations.update);\n    const formData = useSelector((state) => state.formData.formData);\n    const matches321 = useMediaQuery('(max-width:321px)');\n\n    useEffect(() => {\n        // Set phone number to input when you come back from another step\n        setPhoneNumber(formData.phoneNumber);\n    }, [formData.phoneNumber])\n\n\n    // Handler function for name input\n    const nameChangeHandler = (e) => {\n        if(validator.isLength(e.target.value.trim(), {min: 3, max: 10}) ){\n            dispatch(formActions.setOperations({\n                function: 'update',\n                status: \"Success\",\n            }))\n            \n            // Pass the data to the store\n            dispatch(updateForm({name: e.target.value.trim()}));\n        }else{\n            // Set a new error \n            dispatch(formActions.setOperations({\n                function: 'update',\n                status: \"Pending\",\n                error: \"Name must be between 3 and 10 characters!\"\n            }));\n        }\n    }\n\n\n\n\n    return(        \n        <>\n\n         {/* <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n        >\n            <Grid item>\n        <Paper className={classes.root}  elevation={8} > */}\n        \n            \n            {/* <LockOutlinedIcon /> */}\n            \n            {/* <Typography component=\"h1\" variant=\"h5\">\n             Step 1\n            </Typography> */}\n        {/* <Grid container >\n            <Paper sx={{ p: 1, margin: 'auto', maxWidth: 100, flexGrow: 1 }}>\n                <Grid container item spacing={2}>\n\n                    <Grid container item xs={12} sm>\n                        <Grid item xs container direction=\"column\" spacing={2}>\n                            <Grid item xs>\n                                <TextField className={classes.textField} label=\"name\" defaultValue={formData?.name} variant=\"outlined\"  type=\"text\" name=\"Name\" onChange={nameChangeHandler} ></TextField><br />\n                                <PhoneInput  placeholder=\"Enter phone number\"  value={phoneNumber} onChange={ (phone) => { dispatch(updateForm({phoneNumber: phone}))}} country={'gr'}/>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>    \n            </Paper>\n        </Grid> */}\n\n\n<div className={classes.root}>\n        <Grid container direction=\"column\"\n            alignItems=\"center\" spacing={3}>\n          <Grid item md={12} sm={6}>\n            <Paper>xs=12 sm=6</Paper>\n          </Grid>\n          <Grid item md={12} sm={6}>\n            <Paper>xs=12 sm=6</Paper>\n          </Grid>\n        </Grid>\n    </div>\n\n        {/* {nextOperations.error &&\n            <Paper elevation={3} className={classes.errorCard}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n\n                    <Grid item>\n                        <Typography component=\"div\" noWrap={false} paragraph={true} className={classes.error} variant=\"body1\">\n                            <ErrorOutlineOutlinedIcon />\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography component=\"div\" noWrap={false} paragraph={true} className={classes.error} variant=\"body1\">\n                            {nextOperations.error}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n            </Paper>\n        } */}\n        \n    {/* </Paper>\n    </Grid>\n    </Grid> */}\n    </>\n    );\n}\n\nexport default Step1;"]},"metadata":{},"sourceType":"module"}